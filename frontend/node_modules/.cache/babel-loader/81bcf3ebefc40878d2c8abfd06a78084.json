{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Tasks/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Section, Header, Task, NotHaveTasks } from \"./styles\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Emoji } from \"emoji-mart\";\nimport ArrowBack from \"../../assets/arrowBack.svg\";\nimport TaskIcon from \"../../assets/task.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Tasks() {\n  _s();\n\n  const [category, setCategory] = useState({\n    bgColor: \"white\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"black\"\n  });\n  const [allTasks, setAllTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    content: \"\",\n    finish: false,\n    categoryID: \"\"\n  });\n  const params = useParams() || \"\";\n\n  function getLocalTasks(categoryID) {\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"{}\");\n\n    for (var c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return data[c];\n      }\n    }\n\n    return {}; // ID DE URL ERRADO\n  }\n\n  useEffect(() => {\n    const tasks = getLocalTasks(String(params.categoryID)); // Title of category\n\n    setCategory(tasks);\n    refreshLocalTasks();\n  }, []);\n\n  function refreshLocalTasks() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks = [];\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        filterTasks.push(localData[c]);\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    localData.push({\n      content: newTask.content,\n      categoryID: params.categoryID || \"\",\n      finish: false\n    });\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasks();\n  }\n\n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n      setNewTask({\n        content: \"\",\n        finish: false,\n        categoryID: \"\"\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        backgroundColor: category.bgColor,\n        color: category.textColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/categories\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowBack,\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Emoji, {\n            emoji: category.emojiID,\n            set: \"facebook\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: category.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: handleNewTask,\n          htmlFor: \"new-task\",\n          style: newTask.content.length > 0 ? {\n            backgroundColor: \"green\",\n            color: \"#fff\"\n          } : {},\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newTask.content,\n            onChange: e => setNewTask({ ...newTask,\n              content: e.target.value\n            }),\n            id: \"new-task\",\n            type: \"text\",\n            placeholder: \"Adicionar nova tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), allTasks.length === 0 ? /*#__PURE__*/_jsxDEV(NotHaveTasks, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: TaskIcon,\n          alt: \"Nenhuma task encontrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Nenhuma tarefa encontrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : allTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-check ${task.finish ? \"task-check-true\" : \"task-check-false\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-pen-to-square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trash-can\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Tasks, \"Z8nIBxrQXPMedKGFqq4oxqvf/ug=\", false, function () {\n  return [useParams];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Tasks/index.tsx"],"names":["useEffect","useState","Section","Header","Task","NotHaveTasks","useParams","Link","Emoji","ArrowBack","TaskIcon","Tasks","category","setCategory","bgColor","categoryID","content","emojiID","textColor","allTasks","setAllTasks","newTask","setNewTask","finish","params","getLocalTasks","data","JSON","parse","localStorage","getItem","c","length","tasks","String","refreshLocalTasks","localData","filterTasks","push","newLocalTask","setItem","stringify","handleNewTask","backgroundColor","color","e","target","value","map","task","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Section, Header, Task, NotHaveTasks } from \"./styles\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Emoji } from \"emoji-mart\";\nimport { CategoryInfo } from \"../../hooks/useCategories\";\n\nimport ArrowBack from \"../../assets/arrowBack.svg\";\nimport TaskIcon from \"../../assets/task.svg\";\nimport Checked from \"../../assets/checkbox.svg\";\n\ntype Task = {\n  content: string;\n  finish: boolean;\n  categoryID: string;\n}\n\nexport function Tasks() {\n  const [category, setCategory] = useState<CategoryInfo>({\n    bgColor: \"white\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"black\",\n  });\n  const [allTasks, setAllTasks] = useState<Task[]>([]);\n  const [newTask, setNewTask] = useState<Task>({\n    content: \"\",\n    finish: false,\n    categoryID: \"\",\n  });\n\n  const params = useParams() || \"\";\n\n  function getLocalTasks(categoryID: string) {\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"{}\")\n\n    for (var c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return data[c];\n      }\n    }\n\n    return {}; // ID DE URL ERRADO\n  }\n\n  useEffect(() => {\n    const tasks = getLocalTasks(String(params.categoryID)); // Title of category\n\n    setCategory(tasks);\n    refreshLocalTasks();\n  }, []);\n\n  function refreshLocalTasks() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks = [];\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        filterTasks.push(localData[c]);\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    localData.push({ \n      content: newTask.content, \n      categoryID: params.categoryID || \"\", \n      finish: false \n    });\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n\n    refreshLocalTasks();\n  }\n  \n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n\n      setNewTask({\n        content: \"\",\n        finish: false,\n        categoryID: \"\",\n      });\n    }\n  }\n\n  return (\n    <>\n      <Header style={{ backgroundColor: category.bgColor, color: category.textColor }}>\n        <div>\n          <Link to={\"/categories\"}>\n            <img src={ArrowBack} alt=\"Voltar\"/>\n          </Link>\n          \n          <div>\n            <Emoji emoji={category.emojiID} set=\"facebook\" size={40} />\n\n            <h1>{category.content}</h1>\n          </div>\n        </div>\n\n        <hr />\n      </Header>\n\n      <Section>\n        <h1>Tarefas</h1>\n        <hr />\n        <div>\n          <label onClick={handleNewTask} htmlFor=\"new-task\" style={\n              newTask.content.length > 0\n              ? { backgroundColor: \"green\", color: \"#fff\" }\n              : {}\n          }>\n            <i className=\"fa-solid fa-plus\"></i>\n          </label>\n\n          <div>\n            <input \n              value={newTask.content}\n              onChange={(e) => setNewTask({ ...newTask, content: e.target.value })}\n              id={\"new-task\"} \n              type={\"text\"} \n              placeholder={\"Adicionar nova tarefa\"} \n            />\n          </div>\n        </div>\n\n        {\n          allTasks.length === 0\n          ?\n            <NotHaveTasks>\n              <img src={TaskIcon} alt=\"Nenhuma task encontrada\" />\n\n              <h1>Nenhuma tarefa encontrada</h1>\n            </NotHaveTasks>\n          : \n            allTasks.map((task, index) =>\n              <Task key={index}>\n                <div>\n                  <div \n                    className={\n                      `task-check ${task.finish \n                      ? \"task-check-true\" \n                      : \"task-check-false\"\n                    }`}>\n                      \n                    <i className=\"fa-solid fa-check\"></i></div>\n                    \n                  <div>{task.content}</div>\n                </div>\n\n\n                <div>\n                  <i className=\"fa-solid fa-pen-to-square\"></i>\n                  <i className=\"fa-solid fa-trash-can\"></i>\n                </div>\n              </Task>\n            )\n        }\n      </Section>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}