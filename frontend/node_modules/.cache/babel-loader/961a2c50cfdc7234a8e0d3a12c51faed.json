{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Tasks/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Section, Header, Task, NotHaveTasks } from \"./styles\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Emoji } from \"emoji-mart\";\nimport ArrowBack from \"../../assets/arrowBack.svg\";\nimport TaskIcon from \"../../assets/task.svg\";\nimport Checked from \"../../assets/checkbox.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Tasks() {\n  _s();\n\n  const params = useParams() || \"\";\n  const [category, setCategory] = useState({\n    bgColor: \"white\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"black\"\n  });\n  const [allTasks, setAllTasks] = useState([]);\n\n  function getLocalTasks(categoryID) {\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list\") || \"{}\");\n\n    for (var c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return data[c];\n      }\n    }\n\n    return {};\n  }\n\n  useEffect(() => {\n    const tasks = getLocalTasks(String(params.categoryID));\n    setCategory(tasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/categories\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowBack,\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Emoji, {\n            emoji: category.emojiID,\n            set: \"facebook\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: category.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(Task, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Checked,\n            alt: \"checar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Conte\\xFAdo aqui here o quem dirifjdf jjfjdf dfdfjhehr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-pen-to-square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-trash-can\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotHaveTasks, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: TaskIcon,\n          alt: \"Nenhuma task encontrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Nenhuma tarefa encontrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Tasks, \"soR1tU82N3eIsZOINSkf38EsyBM=\", false, function () {\n  return [useParams];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Tasks/index.tsx"],"names":["useEffect","useState","Section","Header","Task","NotHaveTasks","useParams","Link","Emoji","ArrowBack","TaskIcon","Checked","Tasks","params","category","setCategory","bgColor","categoryID","content","emojiID","textColor","allTasks","setAllTasks","getLocalTasks","data","JSON","parse","localStorage","getItem","c","length","tasks","String"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Section, Header, Task, NotHaveTasks } from \"./styles\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Emoji } from \"emoji-mart\";\nimport { CategoryInfo } from \"../../hooks/useCategories\";\n\nimport ArrowBack from \"../../assets/arrowBack.svg\";\nimport TaskIcon from \"../../assets/task.svg\";\nimport Checked from \"../../assets/checkbox.svg\";\n\n\nexport function Tasks() {\n  const params = useParams() || \"\";\n\n  const [category, setCategory] = useState<CategoryInfo>({\n    bgColor: \"white\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"black\",\n  });\n\n  const [allTasks, setAllTasks] = useState([]);\n\n  function getLocalTasks(categoryID: string) {\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list\") || \"{}\")\n\n    for (var c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return data[c];\n      }\n    }\n\n    return {};\n  }\n\n  useEffect(() => {\n    const tasks = getLocalTasks(String(params.categoryID));\n\n    setCategory(tasks);\n    \n  }, []);\n\n\n  return (\n    <>\n      <Header>\n        <div>\n          <Link to={\"/categories\"}>\n            <img src={ArrowBack} alt=\"Voltar\"/>\n          </Link>\n          \n          <div>\n            <Emoji emoji={category.emojiID} set=\"facebook\" size={40} />\n\n            <h2>{category.content}</h2>\n          </div>\n        </div>\n\n        <hr />\n      </Header>\n\n      <Section>\n        <Task>\n          <div>\n            <img src={Checked} alt=\"checar\" />\n            <div>Conte√∫do aqui here o quem dirifjdf jjfjdf dfdfjhehr</div>\n          </div>\n\n\n          <div>\n            <i className=\"fa-solid fa-pen-to-square\"></i>\n            <i className=\"fa-solid fa-trash-can\"></i>\n          </div>\n        </Task>\n        \n        <NotHaveTasks>\n          <img src={TaskIcon} alt=\"Nenhuma task encontrada\" />\n\n          <h1>Nenhuma tarefa encontrada</h1>\n        </NotHaveTasks>\n      </Section>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}