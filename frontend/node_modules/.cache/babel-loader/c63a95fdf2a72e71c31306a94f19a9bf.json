{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Categories/NewCategoryModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { CategoryCard } from \"../CategoryCard\";\nimport { Emoji, Picker } from \"emoji-mart\";\nimport { useCategories } from \"../../../hooks/useCategories\";\nimport MenuCategoryIcon from \"../../../assets/app.png\";\nimport CloseModal from \"../../../assets/close.png\";\nimport { CategoryModalForm, RoundColorPicker } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewCategoryModal(_ref) {\n  _s();\n\n  let {\n    state\n  } = _ref;\n  const {\n    newCategoryState\n  } = useCategories();\n  const [isFormOk, setIsFormOk] = useState(false);\n  const [openEmojis, setOpenEmojis] = useState(false);\n\n  function changeContent(text) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo,\n      content: text\n    });\n  }\n\n  function changeBgColor(hexaColor) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo,\n      bgColor: hexaColor\n    });\n  }\n\n  function changeTxtColor(hexaColor) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo,\n      textColor: hexaColor\n    });\n  }\n\n  function changeEmoji(emoji) {\n    setOpenEmojis(false);\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo,\n      emojiID: emoji.id || \"warning\"\n    });\n  }\n\n  useEffect(() => {\n    if (newCategoryState.categoryInfo.content.length <= 0 && isFormOk === false) setIsFormOk(true);else if (isFormOk === true) setIsFormOk(false);\n  }, [newCategoryState.categoryInfo.content]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: state.newCategoryModalIsOpen,\n    onRequestClose: () => state.setNewCategoryModalIsOpen(false),\n    overlayClassName: \"modal-overlay\",\n    className: \"modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => state.setNewCategoryModalIsOpen(false),\n      className: \"close-modal-icon\",\n      src: CloseModal,\n      alt: \"Fechar modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryModalForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: MenuCategoryIcon,\n          alt: \"Nova categoria icone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Adicione uma nova Categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onFocus: e => e.target.select(),\n          onChange: e => changeContent(e.target.value),\n          value: newCategoryState.categoryInfo.content,\n          type: \"text\",\n          placeholder: \"Coloque aqui o nome da categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-configs-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Configura\\xE7\\xF5es do cart\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RoundColorPicker, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => changeBgColor(e.target.value),\n                  value: newCategoryState.categoryInfo.bgColor,\n                  id: \"bg-color\",\n                  type: \"color\",\n                  alt: \"selecionar cor do fundo do cart\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bg-color\",\n                children: \"Cor de fundo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RoundColorPicker, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => changeTxtColor(e.target.value),\n                  value: newCategoryState.categoryInfo.textColor,\n                  id: \"txt-color\",\n                  type: \"color\",\n                  alt: \"selecionar cor da letra do cart\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"txt-color\",\n                children: \"Cor da letra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select-emoji\",\n              children: [openEmojis ? /*#__PURE__*/_jsxDEV(Picker, {\n                set: \"facebook\",\n                onSelect: e => changeEmoji(e),\n                showPreview: false,\n                showSkinTones: false,\n                theme: \"dark\",\n                style: {\n                  position: \"absolute\",\n                  bottom: \"0\",\n                  left: \"3rem\",\n                  zIndex: 2,\n                  minWidth: \"300px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"icon-container\",\n                onClick: () => openEmojis ? setOpenEmojis(false) : setOpenEmojis(true),\n                children: [/*#__PURE__*/_jsxDEV(Emoji, {\n                  emoji: newCategoryState.categoryInfo.emojiID,\n                  set: \"facebook\",\n                  size: 40\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"select-emoji-id\",\n                  children: \"\\xCDcone da categoria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Seu cart\\xE3o de categoria ficar\\xE1 assim: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CategoryCard, {\n              data: newCategoryState.categoryInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finish-new-category\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isFormOk,\n          children: \"Adicionar nova categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewCategoryModal, \"eF8q4Lb4lg6U9CTNvCQoAtwbDtI=\", false, function () {\n  return [useCategories];\n});\n\n_c = NewCategoryModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCategoryModal\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Categories/NewCategoryModal/index.tsx"],"names":["useEffect","useState","Modal","CategoryCard","Emoji","Picker","useCategories","MenuCategoryIcon","CloseModal","CategoryModalForm","RoundColorPicker","NewCategoryModal","state","newCategoryState","isFormOk","setIsFormOk","openEmojis","setOpenEmojis","changeContent","text","setCategoryInfo","categoryInfo","content","changeBgColor","hexaColor","bgColor","changeTxtColor","textColor","changeEmoji","emoji","emojiID","id","length","newCategoryModalIsOpen","setNewCategoryModalIsOpen","e","target","select","value","position","bottom","left","zIndex","minWidth"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { CategoryCard } from \"../CategoryCard\";\nimport { Emoji, Picker, EmojiData } from \"emoji-mart\";\nimport { useCategories } from \"../../../hooks/useCategories\";\n\nimport MenuCategoryIcon from \"../../../assets/app.png\";\nimport CloseModal from \"../../../assets/close.png\";\nimport { CategoryModalForm, RoundColorPicker } from \"./styles\";\n\n\n\ntype NewCategoryModalProps = {\n  state: {\n    newCategoryModalIsOpen: boolean;\n    setNewCategoryModalIsOpen: (value: boolean) => void;\n  }\n}\n\nexport function NewCategoryModal({state}: NewCategoryModalProps) {\n  const {newCategoryState} = useCategories();\n\n  const [isFormOk, setIsFormOk] = useState(false);\n  const [openEmojis, setOpenEmojis] = useState(false);\n\n\n  function changeContent(text: string) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo, content: text });\n  }\n\n  function changeBgColor(hexaColor: string) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo, bgColor: hexaColor });\n  }\n\n  function changeTxtColor(hexaColor: string) {\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo, textColor: hexaColor });\n  }\n\n  function changeEmoji(emoji: EmojiData) {\n    setOpenEmojis(false);\n    newCategoryState.setCategoryInfo({ ...newCategoryState.categoryInfo, emojiID: emoji.id || \"warning\" })\n  }\n\n  useEffect(() => {\n    if (newCategoryState.categoryInfo.content.length <= 0 && isFormOk === false)\n      setIsFormOk(true);\n    else if (isFormOk === true)\n      setIsFormOk(false);\n  }, [newCategoryState.categoryInfo.content]);\n\n  return (\n    <Modal\n      isOpen={state.newCategoryModalIsOpen}\n      onRequestClose={() => state.setNewCategoryModalIsOpen(false)}\n      overlayClassName={\"modal-overlay\"}\n      className={\"modal-content\"}\n    >\n\n      <img\n        onClick={() => state.setNewCategoryModalIsOpen(false)}\n        className=\"close-modal-icon\"\n        src={CloseModal}\n        alt=\"Fechar modal\"\n      />\n\n      <CategoryModalForm>\n\n        <div className=\"modal-title-header\">\n          <img src={MenuCategoryIcon} alt=\"Nova categoria icone\" />\n          <h1>Adicione uma nova Categoria</h1>\n        </div>\n\n        <div className=\"modal-title-input\">\n          <input\n            onFocus={(e) => e.target.select()}\n            onChange={(e) => changeContent(e.target.value)}\n            value={newCategoryState.categoryInfo.content}\n            type=\"text\"\n            placeholder=\"Coloque aqui o nome da categoria\" />\n        </div>\n\n        <div className=\"modal-configs-inputs\">\n\n          <div>\n            <div>\n              <h4>Configurações do cartão</h4>\n\n              <RoundColorPicker>\n                <div>\n                  <input\n                    onChange={(e) => changeBgColor(e.target.value)}\n                    value={newCategoryState.categoryInfo.bgColor}\n                    id=\"bg-color\"\n                    type=\"color\"\n                    alt=\"selecionar cor do fundo do cartão\"\n                  />\n                </div>\n\n                <label htmlFor=\"bg-color\">Cor de fundo</label>\n              </RoundColorPicker>\n\n              <RoundColorPicker>\n                <div>\n                  <input\n                    onChange={(e) => changeTxtColor(e.target.value)}\n                    value={newCategoryState.categoryInfo.textColor}\n                    id=\"txt-color\"\n                    type=\"color\"\n                    alt=\"selecionar cor da letra do cartão\" />\n                </div>\n\n                <label htmlFor=\"txt-color\">Cor da letra</label>\n              </RoundColorPicker>\n\n              <div className=\"select-emoji\">\n                { openEmojis ? \n                  <Picker\n                    set=\"facebook\"\n                    onSelect={(e) => changeEmoji(e)}\n                    showPreview={false}\n                    showSkinTones={false}\n                    theme={\"dark\"}\n                    style={{\n                      position: \"absolute\",\n                      bottom: \"0\",\n                      left: \"3rem\",\n                      zIndex: 2,\n                      minWidth: \"300px\",\n                    }}\n                  /> : <></>\n                }\n                \n                <div id=\"icon-container\" onClick={() => openEmojis ? setOpenEmojis(false) : setOpenEmojis(true)}>\n                  <Emoji emoji={newCategoryState.categoryInfo.emojiID} set=\"facebook\" size={40} />\n\n                  <label htmlFor=\"select-emoji-id\">Ícone da categoria</label>\n                </div>\n\n              </div>\n            </div>\n\n            <div></div>\n\n            <div>\n              <h4>Seu cartão de categoria ficará assim: </h4>\n              <CategoryCard data={newCategoryState.categoryInfo} />\n            </div>\n          </div>\n\n          <div>\n\n          </div>\n        </div>\n\n        <div className=\"finish-new-category\">\n          <button disabled={isFormOk}>Adicionar nova categoria</button>\n        </div>\n\n      </CategoryModalForm>\n    </Modal>\n  );\n}"]},"metadata":{},"sourceType":"module"}