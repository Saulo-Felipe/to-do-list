{"ast":null,"code":"import e, { isValidElement as t, useRef as n, useLayoutEffect as o, useEffect as s, useReducer as a, useState as r, cloneElement as i, forwardRef as c } from \"react\";\nimport l from \"clsx\";\n\nfunction u(e) {\n  return \"number\" == typeof e && !isNaN(e);\n}\n\nfunction d(e) {\n  return \"boolean\" == typeof e;\n}\n\nfunction p(e) {\n  return \"string\" == typeof e;\n}\n\nfunction m(e) {\n  return \"function\" == typeof e;\n}\n\nfunction f(e) {\n  return p(e) || m(e) ? e : null;\n}\n\nfunction g(e) {\n  return 0 === e || e;\n}\n\nfunction y(e) {\n  return t(e) || p(e) || m(e) || u(e);\n}\n\nconst h = {\n  TOP_LEFT: \"top-left\",\n  TOP_RIGHT: \"top-right\",\n  TOP_CENTER: \"top-center\",\n  BOTTOM_LEFT: \"bottom-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  BOTTOM_CENTER: \"bottom-center\"\n},\n      T = {\n  INFO: \"info\",\n  SUCCESS: \"success\",\n  WARNING: \"warning\",\n  ERROR: \"error\",\n  DEFAULT: \"default\"\n};\n\nfunction v(e, t, n) {\n  void 0 === n && (n = 300);\n  const {\n    scrollHeight: o,\n    style: s\n  } = e;\n  requestAnimationFrame(() => {\n    s.minHeight = \"initial\", s.height = o + \"px\", s.transition = \"all \" + n + \"ms\", requestAnimationFrame(() => {\n      s.height = \"0\", s.padding = \"0\", s.margin = \"0\", setTimeout(t, n);\n    });\n  });\n}\n\nfunction E(t) {\n  let {\n    enter: a,\n    exit: r,\n    appendPosition: i = !1,\n    collapse: c = !0,\n    collapseDuration: l = 300\n  } = t;\n  return function (t) {\n    let {\n      children: u,\n      position: d,\n      preventExitTransition: p,\n      done: m,\n      nodeRef: f,\n      isIn: g\n    } = t;\n    const y = i ? a + \"--\" + d : a,\n          h = i ? r + \"--\" + d : r,\n          T = n(),\n          E = n(0);\n\n    function b(e) {\n      if (e.target !== f.current) return;\n      const t = f.current;\n      t.dispatchEvent(new Event(\"d\")), t.removeEventListener(\"animationend\", b), t.removeEventListener(\"animationcancel\", b), 0 === E.current && \"animationcancel\" !== e.type && (t.className = T.current);\n    }\n\n    function C() {\n      const e = f.current;\n      e.removeEventListener(\"animationend\", C), c ? v(e, m, l) : m();\n    }\n\n    return o(() => {\n      !function () {\n        const e = f.current;\n        T.current = e.className, e.className += \" \" + y, e.addEventListener(\"animationend\", b), e.addEventListener(\"animationcancel\", b);\n      }();\n    }, []), s(() => {\n      g || (p ? C() : function () {\n        E.current = 1;\n        const e = f.current;\n        e.className += \" \" + h, e.addEventListener(\"animationend\", C);\n      }());\n    }, [g]), e.createElement(e.Fragment, null, u);\n  };\n}\n\nfunction b(e, t) {\n  return {\n    content: e.content,\n    containerId: e.props.containerId,\n    id: e.props.toastId,\n    theme: e.props.theme,\n    type: e.props.type,\n    data: e.props.data || {},\n    isLoading: e.props.isLoading,\n    icon: e.props.icon,\n    status: t\n  };\n}\n\nconst C = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(e, t) {\n    return this.list.has(e) || this.list.set(e, []), this.list.get(e).push(t), this;\n  },\n\n  off(e, t) {\n    if (t) {\n      const n = this.list.get(e).filter(e => e !== t);\n      return this.list.set(e, n), this;\n    }\n\n    return this.list.delete(e), this;\n  },\n\n  cancelEmit(e) {\n    const t = this.emitQueue.get(e);\n    return t && (t.forEach(clearTimeout), this.emitQueue.delete(e)), this;\n  },\n\n  emit(e) {\n    this.list.has(e) && this.list.get(e).forEach(t => {\n      const n = setTimeout(() => {\n        t(...[].slice.call(arguments, 1));\n      }, 0);\n      this.emitQueue.has(e) || this.emitQueue.set(e, []), this.emitQueue.get(e).push(n);\n    });\n  }\n\n},\n      _ = t => {\n  let {\n    theme: n,\n    type: o,\n    ...s\n  } = t;\n  return e.createElement(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"colored\" === n ? \"currentColor\" : \"var(--toastify-icon-color-\" + o + \")\",\n    ...s\n  });\n},\n      I = {\n  info: function (t) {\n    return e.createElement(_, { ...t\n    }, e.createElement(\"path\", {\n      d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n    }));\n  },\n  warning: function (t) {\n    return e.createElement(_, { ...t\n    }, e.createElement(\"path\", {\n      d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n    }));\n  },\n  success: function (t) {\n    return e.createElement(_, { ...t\n    }, e.createElement(\"path\", {\n      d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n    }));\n  },\n  error: function (t) {\n    return e.createElement(_, { ...t\n    }, e.createElement(\"path\", {\n      d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n    }));\n  },\n  spinner: function () {\n    return e.createElement(\"div\", {\n      className: \"Toastify__spinner\"\n    });\n  }\n};\n\nfunction O(e) {\n  const [, o] = a(e => e + 1, 0),\n        [c, l] = r([]),\n        h = n(null),\n        T = n(new Map()).current,\n        v = e => -1 !== c.indexOf(e),\n        E = n({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props: e,\n    containerId: null,\n    isToastActive: v,\n    getToast: e => T.get(e)\n  }).current;\n\n  function _(e) {\n    let {\n      containerId: t\n    } = e;\n    const {\n      limit: n\n    } = E.props;\n    !n || t && E.containerId !== t || (E.count -= E.queue.length, E.queue = []);\n  }\n\n  function O(e) {\n    l(t => g(e) ? t.filter(t => t !== e) : []);\n  }\n\n  function L() {\n    const {\n      toastContent: e,\n      toastProps: t,\n      staleId: n\n    } = E.queue.shift();\n    P(e, t, n);\n  }\n\n  function N(e, n) {\n    let {\n      delay: s,\n      staleId: a,\n      ...r\n    } = n;\n    if (!y(e) || function (e) {\n      return !h.current || E.props.enableMultiContainer && e.containerId !== E.props.containerId || T.has(e.toastId) && null == e.updateId;\n    }(r)) return;\n\n    const {\n      toastId: c,\n      updateId: l,\n      data: v\n    } = r,\n          {\n      props: _\n    } = E,\n          N = () => O(c),\n          x = null == l;\n\n    x && E.count++;\n    const B = {\n      toastId: c,\n      updateId: l,\n      containerId: r.containerId,\n      isLoading: r.isLoading,\n      theme: r.theme || _.theme,\n      icon: null != r.icon ? r.icon : _.icon,\n      isIn: !1,\n      key: r.key || E.toastKey++,\n      type: r.type,\n      closeToast: N,\n      closeButton: r.closeButton,\n      rtl: _.rtl,\n      position: r.position || _.position,\n      transition: r.transition || _.transition,\n      className: f(r.className || _.toastClassName),\n      bodyClassName: f(r.bodyClassName || _.bodyClassName),\n      style: r.style || _.toastStyle,\n      bodyStyle: r.bodyStyle || _.bodyStyle,\n      onClick: r.onClick || _.onClick,\n      pauseOnHover: d(r.pauseOnHover) ? r.pauseOnHover : _.pauseOnHover,\n      pauseOnFocusLoss: d(r.pauseOnFocusLoss) ? r.pauseOnFocusLoss : _.pauseOnFocusLoss,\n      draggable: d(r.draggable) ? r.draggable : _.draggable,\n      draggablePercent: r.draggablePercent || _.draggablePercent,\n      draggableDirection: r.draggableDirection || _.draggableDirection,\n      closeOnClick: d(r.closeOnClick) ? r.closeOnClick : _.closeOnClick,\n      progressClassName: f(r.progressClassName || _.progressClassName),\n      progressStyle: r.progressStyle || _.progressStyle,\n      autoClose: !r.isLoading && (R = r.autoClose, k = _.autoClose, !1 === R || u(R) && R > 0 ? R : k),\n      hideProgressBar: d(r.hideProgressBar) ? r.hideProgressBar : _.hideProgressBar,\n      progress: r.progress,\n      role: r.role || _.role,\n\n      deleteToast() {\n        const e = b(T.get(c), \"removed\");\n        T.delete(c), C.emit(4, e);\n        const t = E.queue.length;\n\n        if (E.count = g(c) ? E.count - 1 : E.count - E.displayedToast, E.count < 0 && (E.count = 0), t > 0) {\n          const e = g(c) ? 1 : E.props.limit;\n          if (1 === t || 1 === e) E.displayedToast++, L();else {\n            const n = e > t ? t : e;\n            E.displayedToast = n;\n\n            for (let e = 0; e < n; e++) L();\n          }\n        } else o();\n      }\n\n    };\n    var R, k;\n    const M = I[B.type],\n          D = {\n      theme: B.theme,\n      type: B.type\n    };\n    B.icon = M && M(D), !1 === B.icon ? B.icon = void 0 : m(B.icon) ? B.icon = B.icon(D) : t(B.icon) ? B.icon = i(B.icon, D) : p(B.icon) ? B.icon = B.icon : B.isLoading && (B.icon = I.spinner()), m(r.onOpen) && (B.onOpen = r.onOpen), m(r.onClose) && (B.onClose = r.onClose), B.closeButton = _.closeButton, !1 === r.closeButton || y(r.closeButton) ? B.closeButton = r.closeButton : !0 === r.closeButton && (B.closeButton = !y(_.closeButton) || _.closeButton);\n    let w = e;\n    t(e) && !p(e.type) ? w = i(e, {\n      closeToast: N,\n      toastProps: B,\n      data: v\n    }) : m(e) && (w = e({\n      closeToast: N,\n      toastProps: B,\n      data: v\n    })), _.limit && _.limit > 0 && E.count > _.limit && x ? E.queue.push({\n      toastContent: w,\n      toastProps: B,\n      staleId: a\n    }) : u(s) ? setTimeout(() => {\n      P(w, B, a);\n    }, s) : P(w, B, a);\n  }\n\n  function P(e, t, n) {\n    const {\n      toastId: o\n    } = t;\n    n && T.delete(n);\n    const s = {\n      content: e,\n      props: t\n    };\n    T.set(o, s), l(e => [...e, o].filter(e => e !== n)), C.emit(4, b(s, null == s.props.updateId ? \"added\" : \"updated\"));\n  }\n\n  return s(() => (E.containerId = e.containerId, C.cancelEmit(3).on(0, N).on(1, e => h.current && O(e)).on(5, _).emit(2, E), () => C.emit(3, E)), []), s(() => {\n    E.props = e, E.isToastActive = v, E.displayedToast = c.length;\n  }), {\n    getToastToRender: function (t) {\n      const n = new Map(),\n            o = Array.from(T.values());\n      return e.newestOnTop && o.reverse(), o.forEach(e => {\n        const {\n          position: t\n        } = e.props;\n        n.has(t) || n.set(t, []), n.get(t).push(e);\n      }), Array.from(n, e => t(e[0], e[1]));\n    },\n    containerRef: h,\n    isToastActive: v\n  };\n}\n\nfunction L(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction N(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction P(e) {\n  const [o, a] = r(!1),\n        [i, c] = r(!1),\n        l = n(null),\n        u = n({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: !0,\n    canDrag: !1,\n    boundingRect: null,\n    didMove: !1\n  }).current,\n        d = n(e),\n        {\n    autoClose: p,\n    pauseOnHover: f,\n    closeToast: g,\n    onClick: y,\n    closeOnClick: h\n  } = e;\n\n  function T(t) {\n    if (e.draggable) {\n      u.didMove = !1, document.addEventListener(\"mousemove\", C), document.addEventListener(\"mouseup\", _), document.addEventListener(\"touchmove\", C), document.addEventListener(\"touchend\", _);\n      const n = l.current;\n      u.canCloseOnClick = !0, u.canDrag = !0, u.boundingRect = n.getBoundingClientRect(), n.style.transition = \"\", u.x = L(t.nativeEvent), u.y = N(t.nativeEvent), \"x\" === e.draggableDirection ? (u.start = u.x, u.removalDistance = n.offsetWidth * (e.draggablePercent / 100)) : (u.start = u.y, u.removalDistance = n.offsetHeight * (80 === e.draggablePercent ? 1.5 * e.draggablePercent : e.draggablePercent / 100));\n    }\n  }\n\n  function v() {\n    if (u.boundingRect) {\n      const {\n        top: t,\n        bottom: n,\n        left: o,\n        right: s\n      } = u.boundingRect;\n      e.pauseOnHover && u.x >= o && u.x <= s && u.y >= t && u.y <= n ? b() : E();\n    }\n  }\n\n  function E() {\n    a(!0);\n  }\n\n  function b() {\n    a(!1);\n  }\n\n  function C(t) {\n    const n = l.current;\n    u.canDrag && n && (u.didMove = !0, o && b(), u.x = L(t), u.y = N(t), u.delta = \"x\" === e.draggableDirection ? u.x - u.start : u.y - u.start, u.start !== u.x && (u.canCloseOnClick = !1), n.style.transform = \"translate\" + e.draggableDirection + \"(\" + u.delta + \"px)\", n.style.opacity = \"\" + (1 - Math.abs(u.delta / u.removalDistance)));\n  }\n\n  function _() {\n    document.removeEventListener(\"mousemove\", C), document.removeEventListener(\"mouseup\", _), document.removeEventListener(\"touchmove\", C), document.removeEventListener(\"touchend\", _);\n    const t = l.current;\n\n    if (u.canDrag && u.didMove && t) {\n      if (u.canDrag = !1, Math.abs(u.delta) > u.removalDistance) return c(!0), void e.closeToast();\n      t.style.transition = \"transform 0.2s, opacity 0.2s\", t.style.transform = \"translate\" + e.draggableDirection + \"(0)\", t.style.opacity = \"1\";\n    }\n  }\n\n  s(() => {\n    d.current = e;\n  }), s(() => (l.current && l.current.addEventListener(\"d\", E, {\n    once: !0\n  }), m(e.onOpen) && e.onOpen(t(e.children) && e.children.props), () => {\n    const e = d.current;\n    m(e.onClose) && e.onClose(t(e.children) && e.children.props);\n  }), []), s(() => (e.pauseOnFocusLoss && (document.hasFocus() || b(), window.addEventListener(\"focus\", E), window.addEventListener(\"blur\", b)), () => {\n    e.pauseOnFocusLoss && (window.removeEventListener(\"focus\", E), window.removeEventListener(\"blur\", b));\n  }), [e.pauseOnFocusLoss]);\n  const I = {\n    onMouseDown: T,\n    onTouchStart: T,\n    onMouseUp: v,\n    onTouchEnd: v\n  };\n  return p && f && (I.onMouseEnter = b, I.onMouseLeave = E), h && (I.onClick = e => {\n    y && y(e), u.canCloseOnClick && g();\n  }), {\n    playToast: E,\n    pauseToast: b,\n    isRunning: o,\n    preventExitTransition: i,\n    toastRef: l,\n    eventHandlers: I\n  };\n}\n\nfunction x(t) {\n  let {\n    closeToast: n,\n    theme: o,\n    ariaLabel: s = \"close\"\n  } = t;\n  return e.createElement(\"button\", {\n    className: \"Toastify__close-button Toastify__close-button--\" + o,\n    type: \"button\",\n    onClick: e => {\n      e.stopPropagation(), n(e);\n    },\n    \"aria-label\": s\n  }, e.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, e.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction B(t) {\n  let {\n    delay: n,\n    isRunning: o,\n    closeToast: s,\n    type: a,\n    hide: r,\n    className: i,\n    style: c,\n    controlledProgress: u,\n    progress: d,\n    rtl: p,\n    isIn: f,\n    theme: g\n  } = t;\n  const y = { ...c,\n    animationDuration: n + \"ms\",\n    animationPlayState: o ? \"running\" : \"paused\",\n    opacity: r ? 0 : 1\n  };\n  u && (y.transform = \"scaleX(\" + d + \")\");\n  const h = l(\"Toastify__progress-bar\", u ? \"Toastify__progress-bar--controlled\" : \"Toastify__progress-bar--animated\", \"Toastify__progress-bar-theme--\" + g, \"Toastify__progress-bar--\" + a, {\n    \"Toastify__progress-bar--rtl\": p\n  }),\n        T = m(i) ? i({\n    rtl: p,\n    type: a,\n    defaultClassName: h\n  }) : l(h, i);\n  return e.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-hidden\": r ? \"true\" : \"false\",\n    \"aria-label\": \"notification timer\",\n    className: T,\n    style: y,\n    [u && d >= 1 ? \"onTransitionEnd\" : \"onAnimationEnd\"]: u && d < 1 ? null : () => {\n      f && s();\n    }\n  });\n}\n\nB.defaultProps = {\n  type: T.DEFAULT,\n  hide: !1\n};\n\nconst R = t => {\n  const {\n    isRunning: n,\n    preventExitTransition: o,\n    toastRef: s,\n    eventHandlers: a\n  } = P(t),\n        {\n    closeButton: r,\n    children: i,\n    autoClose: c,\n    onClick: u,\n    type: d,\n    hideProgressBar: p,\n    closeToast: f,\n    transition: g,\n    position: y,\n    className: h,\n    style: T,\n    bodyClassName: v,\n    bodyStyle: E,\n    progressClassName: b,\n    progressStyle: C,\n    updateId: _,\n    role: I,\n    progress: O,\n    rtl: L,\n    toastId: N,\n    deleteToast: x,\n    isIn: R,\n    isLoading: k,\n    icon: M,\n    theme: D\n  } = t,\n        w = l(\"Toastify__toast\", \"Toastify__toast-theme--\" + D, \"Toastify__toast--\" + d, {\n    \"Toastify__toast--rtl\": L\n  }),\n        A = m(h) ? h({\n    rtl: L,\n    position: y,\n    type: d,\n    defaultClassName: w\n  }) : l(w, h),\n        F = !!O;\n  return e.createElement(g, {\n    isIn: R,\n    done: x,\n    position: y,\n    preventExitTransition: o,\n    nodeRef: s\n  }, e.createElement(\"div\", {\n    id: N,\n    onClick: u,\n    className: A,\n    ...a,\n    style: T,\n    ref: s\n  }, e.createElement(\"div\", { ...(R && {\n      role: I\n    }),\n    className: m(v) ? v({\n      type: d\n    }) : l(\"Toastify__toast-body\", v),\n    style: E\n  }, M && e.createElement(\"div\", {\n    className: l(\"Toastify__toast-icon\", {\n      \"Toastify--animate-icon Toastify__zoom-enter\": !k\n    })\n  }, M), e.createElement(\"div\", null, i)), function (t) {\n    if (!t) return;\n    const n = {\n      closeToast: f,\n      type: d,\n      theme: D\n    };\n    return m(t) ? t(n) : e.isValidElement(t) ? e.cloneElement(t, n) : void 0;\n  }(r), (c || F) && e.createElement(B, { ...(_ && !F ? {\n      key: \"pb-\" + _\n    } : {}),\n    rtl: L,\n    theme: D,\n    delay: c,\n    isRunning: n,\n    isIn: R,\n    closeToast: f,\n    hide: p,\n    type: d,\n    style: C,\n    className: b,\n    controlledProgress: F,\n    progress: O\n  })));\n},\n      k = E({\n  enter: \"Toastify--animate Toastify__bounce-enter\",\n  exit: \"Toastify--animate Toastify__bounce-exit\",\n  appendPosition: !0\n}),\n      M = E({\n  enter: \"Toastify--animate Toastify__slide-enter\",\n  exit: \"Toastify--animate Toastify__slide-exit\",\n  appendPosition: !0\n}),\n      D = E({\n  enter: \"Toastify--animate Toastify__zoom-enter\",\n  exit: \"Toastify--animate Toastify__zoom-exit\"\n}),\n      w = E({\n  enter: \"Toastify--animate Toastify__flip-enter\",\n  exit: \"Toastify--animate Toastify__flip-exit\"\n}),\n      A = c((t, n) => {\n  const {\n    getToastToRender: o,\n    containerRef: a,\n    isToastActive: r\n  } = O(t),\n        {\n    className: i,\n    style: c,\n    rtl: u,\n    containerId: d\n  } = t;\n\n  function p(e) {\n    const t = l(\"Toastify__toast-container\", \"Toastify__toast-container--\" + e, {\n      \"Toastify__toast-container--rtl\": u\n    });\n    return m(i) ? i({\n      position: e,\n      rtl: u,\n      defaultClassName: t\n    }) : l(t, f(i));\n  }\n\n  return s(() => {\n    n && (n.current = a.current);\n  }, []), e.createElement(\"div\", {\n    ref: a,\n    className: \"Toastify\",\n    id: d\n  }, o((t, n) => {\n    const o = n.length ? { ...c\n    } : { ...c,\n      pointerEvents: \"none\"\n    };\n    return e.createElement(\"div\", {\n      className: p(t),\n      style: o,\n      key: \"container-\" + t\n    }, n.map((t, o) => {\n      let {\n        content: s,\n        props: a\n      } = t;\n      return e.createElement(R, { ...a,\n        isIn: r(a.toastId),\n        style: {\n          \"--nth\": o + 1,\n          \"--len\": n.length\n        },\n        key: \"toast-\" + a.key,\n        closeButton: !0 === a.closeButton ? x : a.closeButton\n      }, s);\n    }));\n  }));\n});\n\nA.displayName = \"ToastContainer\", A.defaultProps = {\n  position: h.TOP_RIGHT,\n  transition: k,\n  rtl: !1,\n  autoClose: 5e3,\n  hideProgressBar: !1,\n  closeButton: x,\n  pauseOnHover: !0,\n  pauseOnFocusLoss: !0,\n  closeOnClick: !0,\n  newestOnTop: !1,\n  draggable: !0,\n  draggablePercent: 80,\n  draggableDirection: \"x\",\n  role: \"alert\",\n  theme: \"light\"\n};\nlet F,\n    S = new Map(),\n    z = [];\n\nfunction H() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\nfunction q(e) {\n  return e && (p(e.toastId) || u(e.toastId)) ? e.toastId : H();\n}\n\nfunction U(e, t) {\n  return S.size > 0 ? C.emit(0, e, t) : z.push({\n    content: e,\n    options: t\n  }), t.toastId;\n}\n\nfunction Q(e, t) {\n  return { ...t,\n    type: t && t.type || e,\n    toastId: q(t)\n  };\n}\n\nfunction G(e) {\n  return (t, n) => U(t, Q(e, n));\n}\n\nfunction W(e, t) {\n  return U(e, Q(T.DEFAULT, t));\n}\n\nW.loading = (e, t) => U(e, Q(T.DEFAULT, {\n  isLoading: !0,\n  autoClose: !1,\n  closeOnClick: !1,\n  closeButton: !1,\n  draggable: !1,\n  ...t\n})), W.promise = function (e, t, n) {\n  let o,\n      {\n    pending: s,\n    error: a,\n    success: r\n  } = t;\n  s && (o = p(s) ? W.loading(s, n) : W.loading(s.render, { ...n,\n    ...s\n  }));\n\n  const i = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  },\n        c = (e, t, s) => {\n    if (null == t) return void W.dismiss(o);\n    const a = {\n      type: e,\n      ...i,\n      ...n,\n      data: s\n    },\n          r = p(t) ? {\n      render: t\n    } : t;\n    return o ? W.update(o, { ...a,\n      ...r\n    }) : W(r.render, { ...a,\n      ...r\n    }), s;\n  },\n        l = m(e) ? e() : e;\n\n  return l.then(e => c(\"success\", r, e)).catch(e => c(\"error\", a, e)), l;\n}, W.success = G(T.SUCCESS), W.info = G(T.INFO), W.error = G(T.ERROR), W.warning = G(T.WARNING), W.warn = W.warning, W.dark = (e, t) => U(e, Q(T.DEFAULT, {\n  theme: \"dark\",\n  ...t\n})), W.dismiss = e => C.emit(1, e), W.clearWaitingQueue = function (e) {\n  return void 0 === e && (e = {}), C.emit(5, e);\n}, W.isActive = e => {\n  let t = !1;\n  return S.forEach(n => {\n    n.isToastActive && n.isToastActive(e) && (t = !0);\n  }), t;\n}, W.update = function (e, t) {\n  void 0 === t && (t = {}), setTimeout(() => {\n    const n = function (e, t) {\n      let {\n        containerId: n\n      } = t;\n      const o = S.get(n || F);\n      return o ? o.getToast(e) : null;\n    }(e, t);\n\n    if (n) {\n      const {\n        props: o,\n        content: s\n      } = n,\n            a = { ...o,\n        ...t,\n        toastId: t.toastId || e,\n        updateId: H()\n      };\n      a.toastId !== e && (a.staleId = e);\n      const r = a.render || s;\n      delete a.render, U(r, a);\n    }\n  }, 0);\n}, W.done = e => {\n  W.update(e, {\n    progress: 1\n  });\n}, W.onChange = e => (C.on(4, e), () => {\n  C.off(4, e);\n}), W.POSITION = h, W.TYPE = T, C.on(2, e => {\n  F = e.containerId || e, S.set(F, e), z.forEach(e => {\n    C.emit(0, e.content, e.options);\n  }), z = [];\n}).on(3, e => {\n  S.delete(e.containerId || e), 0 === S.size && C.off(0).off(1).off(5);\n});\nexport { k as Bounce, w as Flip, I as Icons, M as Slide, A as ToastContainer, D as Zoom, v as collapseToast, E as cssTransition, W as toast, P as useToast, O as useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","e","target","current","dispatchEvent","Event","removeEventListener","type","className","onExited","useLayoutEffect","addEventListener","onEnter","useEffect","onExit","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Icons","info","d","warning","success","error","spinner","useToastContainer","forceUpdate","useReducer","x","toastIds","setToastIds","useState","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","length","removeToast","state","dequeueToast","toastContent","toastProps","staleId","shift","appendToast","buildToast","delay","options","enableMultiContainer","updateId","isNotValid","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","toastAutoClose","containerAutoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","maybeIcon","iconProps","cloneElement","onOpen","onClose","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","t","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","defaultProps","Toast","Transition","Icon","cssClasses","isProgressControlled","ref","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sources":["/workspace/to-do-list/frontend/node_modules/react-toastify/src/utils/propValidator.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/utils/constant.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/utils/collapseToast.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/utils/cssTransition.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/utils/mapper.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/core/eventManager.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/Icons.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/hooks/useToastContainer.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/hooks/useToast.ts","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/CloseButton.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/ProgressBar.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/Toast.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/Transitions.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/components/ToastContainer.tsx","/workspace/to-do-list/frontend/node_modules/react-toastify/src/core/toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { Icons } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    const maybeIcon = Icons[toastProps.type as keyof typeof Icons];\n    const iconProps = { theme: toastProps.theme, type: toastProps.type };\n    toastProps.icon = maybeIcon && maybeIcon(iconProps);\n\n    if (toastProps.icon === false) {\n      toastProps.icon = void 0;\n    } else if (isFn(toastProps.icon)) {\n      toastProps.icon = toastProps.icon(iconProps);\n    } else if (isValidElement(toastProps.icon)) {\n      toastProps.icon = cloneElement(toastProps.icon, iconProps);\n    } else if (isStr(toastProps.icon)) {\n      toastProps.icon = toastProps.icon;\n    } else if (toastProps.isLoading) {\n      toastProps.icon = Icons.spinner();\n    }\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon: Icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}