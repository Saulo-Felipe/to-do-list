{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/frontend/src/components/Register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport ReactModal from \"react-modal\";\nimport { api } from \"../../services/api\";\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Container, InputContainer, Button } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Register(props) {\n  _s();\n\n  const [register, setRegister] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n\n  async function Register() {\n    if (register.name.length <= 2) {\n      toast.error(\"Nome muito curto.\");\n    } else if (register.email.indexOf(\"@\") === -1) {\n      toast.error(\"Email inválido.\");\n    } else if (register.password !== register.password2) {\n      toast.error(\"As senhas não estão iguais.\");\n    } else {\n      let {\n        data\n      } = await api.post(\"/register\", {\n        name: register.name,\n        email: register.email,\n        password: register.password\n      });\n      if (data.success) toast.success(\"Registro finalizado com sucesso!\");else toast.error(\"Erro ao registrar usuario\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: props.isOpen,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      onRequestClose: () => props.setIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => props.setIsOpen(false),\n        className: \"close-modal-icon\",\n        src: ImgCloseModal,\n        alt: \"Fechar modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.name,\n            onChange: e => setRegister({ ...register,\n              name: e.target.value\n            }),\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Seu nome completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.email,\n            onChange: e => setRegister({ ...register,\n              email: e.target.value\n            }),\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Endere\\xE7o de email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.password,\n            onChange: e => setRegister({ ...register,\n              password: e.target.value\n            }),\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Digite uma senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Digite a senha novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.password2,\n            onChange: e => setRegister({ ...register,\n              password2: e.target.value\n            }),\n            id: \"password2\",\n            type: \"password\",\n            placeholder: \"Para confirmar, digite novamente sua senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: Register,\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"CAWpD1V5Pv4Q6MvXf/0bYCnjmlo=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/workspace/to-do-list/frontend/src/components/Register/index.tsx"],"names":["ReactModal","api","useState","ToastContainer","toast","Container","InputContainer","Button","ImgCloseModal","Register","props","register","setRegister","name","email","password","password2","length","error","indexOf","data","post","success","isOpen","setIsOpen","e","target","value"],"mappings":"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","sourcesContent":["import ReactModal from \"react-modal\";\nimport { api } from \"../../services/api\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\n\nimport { Container, InputContainer, Button } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\n\ntype RegisterProps = {\n  isOpen: boolean;\n  setIsOpen: (param: boolean) => void;\n}\n\nexport function Register(props: RegisterProps) {\n  const [register, setRegister] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  })\n\n  async function Register() {\n    if (register.name.length <= 2) {\n      toast.error(\"Nome muito curto.\");\n    } else if (register.email.indexOf(\"@\") === -1) {\n      toast.error(\"Email inválido.\");\n    } else if (register.password !== register.password2) {\n      toast.error(\"As senhas não estão iguais.\");\n    } else {\n      let {data} = await api.post(\"/register\", {\n        name: register.name,\n        email: register.email,\n        password: register.password,\n      });\n\n      if (data.success) toast.success(\"Registro finalizado com sucesso!\");\n      else toast.error(\"Erro ao registrar usuario\");\n\n    }\n  } \n\n  return (\n    <>\n      <ToastContainer />\n\n      <ReactModal\n        isOpen={props.isOpen}\n        className={\"modal-content\"}\n        overlayClassName={\"modal-overlay\"}\n        onRequestClose={() => props.setIsOpen(false)}\n      >\n        <img\n          onClick={() => props.setIsOpen(false)}\n          className=\"close-modal-icon\"\n          src={ImgCloseModal}\n          alt=\"Fechar modal\"\n        />\n        <Container>\n\n          <InputContainer>\n            <label htmlFor=\"name\">Nome completo</label>\n            <input \n              value={register.name}\n              onChange={(e) => setRegister({ ...register, name: e.target.value })}\n              id=\"name\" \n              type=\"text\" \n              placeholder=\"Seu nome completo\"\n            />\n          </InputContainer>\n\n          <InputContainer>\n            <label>Email</label>\n            <input \n              value={register.email}\n              onChange={(e) => setRegister({ ...register, email: e.target.value })}\n              id=\"email\" \n              type=\"email\" \n              placeholder=\"Endereço de email\" \n            />\n          </InputContainer>\n\n          <InputContainer>\n            <label>Senha</label>\n            <input \n              value={register.password}\n              onChange={(e) => setRegister({ ...register, password: e.target.value })}\n              id=\"password\" \n              type=\"password\" \n              placeholder=\"Digite uma senha\" \n            />\n          </InputContainer>\n\n\n          <InputContainer>\n            <label>Digite a senha novamente</label>\n            <input \n              value={register.password2}\n              onChange={(e) => setRegister({ ...register, password2: e.target.value })}\n              id=\"password2\" \n              type=\"password\" \n              placeholder=\"Para confirmar, digite novamente sua senha\" />\n          </InputContainer>\n\n\n          <Button \n            onClick={Register}\n          >Cadastre-se</Button>\n\n        </Container>\n      </ReactModal>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}