{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/frontend/src/components/Register/index.tsx\";\nimport ReactModal from \"react-modal\";\nimport { Container, InputContainer } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register(props) {\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: props.isOpen,\n    className: \"modal-content\",\n    overlayClassName: \"modal-overlay\",\n    onRequestClose: () => props.setIsOpen(false),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => props.setIsOpen(false),\n      className: \"close-modal-icon\",\n      src: ImgCloseModal,\n      alt: \"Fechar modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nome completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          placeholder: \"Seu nome completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"Endere\\xE7o de email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          placeholder: \"Digite uma senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Digite a senha novamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          placeholder: \"Para confirmar, digite novamente sua senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/workspace/to-do-list/frontend/src/components/Register/index.tsx"],"names":["ReactModal","Container","InputContainer","ImgCloseModal","Register","props","isOpen","setIsOpen"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,SAASC,SAAT,EAAoBC,cAApB,QAAkD,UAAlD;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAOA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAI7C,sBACE,QAAC,UAAD;AACE,IAAA,MAAM,EAAEA,KAAK,CAACC,MADhB;AAEE,IAAA,SAAS,EAAE,eAFb;AAGE,IAAA,gBAAgB,EAAE,eAHpB;AAIE,IAAA,cAAc,EAAE,MAAMD,KAAK,CAACE,SAAN,CAAgB,KAAhB,CAJxB;AAAA,4BAME;AACE,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACE,SAAN,CAAgB,KAAhB,CADjB;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,GAAG,EAAEJ,aAHP;AAIE,MAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,YANF,eAYE,QAAC,SAAD;AAAA,8BAEE,QAAC,cAAD;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,WAAW,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,cAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAA+B,UAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,cAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAkBE,QAAC,cAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAwBE;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;KA9CeC,Q","sourcesContent":["import ReactModal from \"react-modal\";\n\nimport { Container, InputContainer, Button } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\n\ntype RegisterProps = {\n  isOpen: boolean;\n  setIsOpen: (param: boolean) => void;\n}\n\nexport function Register(props: RegisterProps) {\n\n\n\n  return (\n    <ReactModal \n      isOpen={props.isOpen}\n      className={\"modal-content\"}\n      overlayClassName={\"modal-overlay\"}\n      onRequestClose={() => props.setIsOpen(false)}\n    >\n      <img\n        onClick={() => props.setIsOpen(false)}\n        className=\"close-modal-icon\"\n        src={ImgCloseModal}\n        alt=\"Fechar modal\"\n      />      \n      <Container>\n\n        <InputContainer>\n          <label htmlFor=\"name\">Nome completo</label>\n          <input id=\"name\" type=\"text\" placeholder=\"Seu nome completo\"/>\n        </InputContainer>\n\n        <InputContainer>\n          <label>Email</label>\n          <input id=\"email\" type=\"email\" placeholder=\"EndereÃ§o de email\" />\n        </InputContainer>\n\n        <InputContainer>\n          <label>Senha</label>\n          <input id=\"password\" type=\"password\" placeholder=\"Digite uma senha\" />\n        </InputContainer>\n\n\n        <InputContainer>\n          <label>Digite a senha novamente</label>\n          <input id=\"password\" type=\"password\" placeholder=\"Para confirmar, digite novamente sua senha\" />\n        </InputContainer>\n\n\n        <button></button>\n\n      </Container>\n    </ReactModal>\n  );\n}"]},"metadata":{},"sourceType":"module"}