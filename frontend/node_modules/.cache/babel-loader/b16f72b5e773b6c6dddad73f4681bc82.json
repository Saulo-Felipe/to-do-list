{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Tasks/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Emoji } from \"emoji-mart\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport { Header, Container, CreateNewTask, TaskContainer, Section } from \"./styles\";\nimport ImgBack from \"../../assets/back.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tasks() {\n  _s();\n\n  const [category, setCategory] = useState({\n    bgColor: \"#0f3f86\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"white\"\n  });\n  const [allTasks, setAllTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    taskID: \"\",\n    content: \"\",\n    finish: false,\n    categoryID: \"\"\n  });\n  const params = useParams();\n\n  function getLocalCategoryInfo(categoryID) {\n    // FOi\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"[]\");\n\n    for (let c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return setCategory(data[c]);\n      }\n    }\n  }\n\n  function refreshLocalTasksState() {\n    // if localstorage change\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks = [];\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        filterTasks.push(localData[c]);\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    localData.push({\n      taskID: uuid(),\n      content: newTask.content,\n      categoryID: params.categoryID || \"\",\n      finish: false\n    });\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n    setNewTask({\n      taskID: \"\",\n      content: \"\",\n      finish: false,\n      categoryID: \"\"\n    });\n  }\n\n  function handleDoneLocalTask(taskID) {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].taskID === taskID) {\n        localData[c].finish = localData[c].finish ? false : true;\n      }\n    }\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n  }\n\n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n    }\n  }\n\n  useEffect(() => {\n    getLocalCategoryInfo(params.categoryID || \"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      bgColor: category.bgColor,\n      textColor: category.textColor,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/categories\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ImgBack,\n              alt: \"Voltar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Voltar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Emoji, {\n            emoji: \"heavy_plus_sign\",\n            set: \"facebook\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Lembretes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(CreateNewTask, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Adicionar nova tarefa\",\n            onChange: e => setNewTask({ ...newTask,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-circle-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"COnte\\xFAdo presente aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-circle-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"COnte\\xFAdo presente aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-circle-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"COnte\\xFAdo presente aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"XbJy9Q/00HYY93Km8/H10fyw9u0=\", false, function () {\n  return [useParams];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Tasks/index.tsx"],"names":["useState","useEffect","Emoji","Link","useParams","v4","uuid","Header","Container","CreateNewTask","TaskContainer","Section","ImgBack","Tasks","category","setCategory","bgColor","categoryID","content","emojiID","textColor","allTasks","setAllTasks","newTask","setNewTask","taskID","finish","params","getLocalCategoryInfo","data","JSON","parse","localStorage","getItem","c","length","refreshLocalTasksState","localData","filterTasks","push","newLocalTask","setItem","stringify","handleDoneLocalTask","handleNewTask","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Emoji } from \"emoji-mart\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { Header, Container, CreateNewTask, TaskContainer, Section } from \"./styles\";\nimport ImgBack from \"../../assets/back.svg\";\n\ntype Task = {\n  taskID: string;\n  content: string;\n  finish: boolean;\n  categoryID: string;\n}\n\nexport function Tasks() {\n  const [category, setCategory] = useState({\n    bgColor: \"#0f3f86\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"white\",\n  });\n  const [allTasks, setAllTasks] = useState<Task[]>([]);\n  const [newTask, setNewTask] = useState<Task>({\n    taskID: \"\",\n    content: \"\",\n    finish: false,\n    categoryID: \"\",\n  });\n\n  const params = useParams();\n\n  function getLocalCategoryInfo(categoryID: string) { // FOi\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"[]\")\n\n    for (let c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return setCategory(data[c]);\n      }\n    }\n  }\n\n  function refreshLocalTasksState() { // if localstorage change\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks = [];\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        filterTasks.push(localData[c]);\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData: Task[] = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    localData.push({ \n      taskID: uuid(),\n      content: newTask.content, \n      categoryID: params.categoryID || \"\", \n      finish: false \n    });\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n\n    refreshLocalTasksState();\n    setNewTask({\n      taskID: \"\",\n      content: \"\",\n      finish: false,\n      categoryID: \"\",\n    });\n  }\n  \n  function handleDoneLocalTask(taskID: string) {\n    let localData: Task[] = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].taskID === taskID) {\n        localData[c].finish = localData[c].finish ? false : true;\n      }\n    }\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n  }\n    \n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n    }\n  }\n\n  useEffect(() => {\n    getLocalCategoryInfo(params.categoryID || \"\");\n  }, [])\n\n  return (\n    <Container>\n      <Header bgColor={category.bgColor} textColor={category.textColor}>\n        <div>\n          <Link to={\"/categories\"} >\n            <div>\n              <img src={ImgBack} alt=\"Voltar\" />\n              <h2> Voltar</h2>\n            </div>\n          </Link>\n        </div>\n\n        <div>\n          <div>\n            <Emoji emoji={\"heavy_plus_sign\"} set='facebook' size={40} />\n\n            <h1>Lembretes</h1>\n          </div>\n        </div>\n      </Header>\n\n      <Section>\n        <CreateNewTask>\n          <div>\n            <i className=\"fa-solid fa-plus\"></i>\n          </div>\n\n          <div>\n            <input \n              type=\"text\" \n              placeholder=\"Adicionar nova tarefa\" \n              onChange={e => setNewTask({ ...newTask, content: e.target.value })}\n            />\n          </div>\n        </CreateNewTask>\n\n        <TaskContainer>\n          <div>\n            <i className=\"fa-solid fa-circle-check\"></i>\n          </div>\n\n          <div>\n            COnteúdo presente aqui\n          </div>\n        </TaskContainer>\n\n        <TaskContainer>\n          <div>\n            <i className=\"fa-solid fa-circle-check\"></i>\n          </div>\n\n          <div>\n            COnteúdo presente aqui\n          </div>\n        </TaskContainer>\n\n        <TaskContainer>\n          <div>\n            <i className=\"fa-solid fa-circle-check\"></i>\n          </div>\n\n          <div>\n            COnteúdo presente aqui\n          </div>\n        </TaskContainer>\n\n      </Section>\n\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}