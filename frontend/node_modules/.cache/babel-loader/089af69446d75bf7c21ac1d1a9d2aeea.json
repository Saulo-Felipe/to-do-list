{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Categories/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { CategoriesHeader, CategoriesContent, WithoutCategories } from \"./styles\";\nimport { useEffect } from \"react\";\nimport { CategoryCard } from \"./CategoryCard\";\nimport 'emoji-mart/css/emoji-mart.css';\nimport { NewCategoryModal } from \"./NewCategoryModal\";\nimport { useCategories } from \"../../hooks/useCategories\";\nimport Plane from \"../../assets/plane.svg\";\nimport Folder from \"../../assets/folder.svg\";\nimport OptionsStruct from \"../../assets/optionsStruct.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Categories() {\n  _s();\n\n  const {\n    newCategoryModalIsOpen,\n    setNewCategoryModalIsOpen\n  } = useCategories().modalOpen;\n  const {\n    allCategories,\n    refreshLocalCategory\n  } = useCategories();\n  useEffect(() => {\n    refreshLocalCategory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoriesHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Categorias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: OptionsStruct,\n          alt: \"Estrutura das op\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoriesContent, {\n      children: [allCategories.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(CategoryCard, {\n          data: {\n            categoryID: card.categoryID,\n            bgColor: card.bgColor,\n            textColor: card.textColor,\n            content: card.content,\n            emojiID: card.emojiID\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-category-card\",\n        onClick: () => setNewCategoryModalIsOpen(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Folder,\n          alt: \"nova categoria \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), allCategories.length === 0 ? /*#__PURE__*/_jsxDEV(WithoutCategories, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Plane,\n        alt: \"Falta de categorias (icone)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nenhuma categoria adicionada, adicione uma nova!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(NewCategoryModal, {\n      state: {\n        newCategoryModalIsOpen,\n        setNewCategoryModalIsOpen\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Categories, \"vGpu9/tNUNCS4oec0vVBJNREe20=\", false, function () {\n  return [useCategories, useCategories];\n});\n\n_c = Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Categories/index.tsx"],"names":["CategoriesHeader","CategoriesContent","WithoutCategories","useEffect","CategoryCard","NewCategoryModal","useCategories","Plane","Folder","OptionsStruct","Categories","newCategoryModalIsOpen","setNewCategoryModalIsOpen","modalOpen","allCategories","refreshLocalCategory","map","card","index","categoryID","bgColor","textColor","content","emojiID","length"],"mappings":";;;AAAA,SACEA,gBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,UAJP;AAMA,SAASC,SAAT,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,+BAAP;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAGA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM;AAACC,IAAAA,sBAAD;AAAyBC,IAAAA;AAAzB,MAAsDN,aAAa,GAAGO,SAA5E;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA0CT,aAAa,EAA7D;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,GAAG,EAAEN,aAAV;AAAyB,UAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,iBAAD;AAAA,iBAEIK,aAAa,CAACE,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BACE,QAAC,YAAD;AAA0B,UAAA,IAAI,EAAE;AAC9BC,YAAAA,UAAU,EAAEF,IAAI,CAACE,UADa;AAE9BC,YAAAA,OAAO,EAAEH,IAAI,CAACG,OAFgB;AAG9BC,YAAAA,SAAS,EAAEJ,IAAI,CAACI,SAHc;AAI9BC,YAAAA,OAAO,EAAEL,IAAI,CAACK,OAJgB;AAK9BC,YAAAA,OAAO,EAAEN,IAAI,CAACM;AALgB;AAAhC,WAAmBL,KAAnB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CAFJ,eAeE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAE,MAAMN,yBAAyB,CAAC,IAAD,CAA3E;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEJ,MAAV;AAAkB,UAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAgCIM,aAAa,CAACU,MAAd,KAAyB,CAAzB,gBACE,QAAC,iBAAD;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEjB,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAKE,qCArCN,eAwCE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEI,QAAAA,sBAAF;AAA0BC,QAAAA;AAA1B;AAAzB;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA,kBADF;AA4CD;;GApDeF,U;UAC8CJ,a,EACZA,a;;;KAFlCI,U","sourcesContent":["import {\n  CategoriesHeader,\n  CategoriesContent,\n  WithoutCategories,\n} from \"./styles\";\n\nimport { useEffect, useState } from \"react\";\nimport { CategoryCard } from \"./CategoryCard\";\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker, Emoji } from 'emoji-mart';\nimport { NewCategoryModal } from \"./NewCategoryModal\";\nimport { useCategories } from \"../../hooks/useCategories\";\n\nimport Plane from \"../../assets/plane.svg\";\nimport Folder from \"../../assets/folder.svg\";\nimport OptionsStruct from \"../../assets/optionsStruct.svg\";\n\n\nexport function Categories() {\n  const {newCategoryModalIsOpen, setNewCategoryModalIsOpen} = useCategories().modalOpen;\n  const { allCategories, refreshLocalCategory } = useCategories();\n\n  useEffect(() => {\n    refreshLocalCategory();\n  }, [])\n\n  return (\n    <>\n      <CategoriesHeader>\n        <div>\n          <h1>Categorias</h1>\n\n          <img src={OptionsStruct} alt=\"Estrutura das opções\" />\n        </div>\n\n        <hr />\n      </CategoriesHeader>\n\n      <CategoriesContent>\n        {\n          allCategories.map((card, index) => {\n            return (\n              <CategoryCard key={index} data={{\n                categoryID: card.categoryID,\n                bgColor: card.bgColor,\n                textColor: card.textColor,\n                content: card.content,\n                emojiID: card.emojiID\n              }} />\n            );\n          })\n        }\n\n        <div className=\"new-category-card\" onClick={() => setNewCategoryModalIsOpen(true)}>\n          <img src={Folder} alt=\"nova categoria \"/>\n        </div>\n      </CategoriesContent>\n\n      {\n        allCategories.length === 0 ?\n          <WithoutCategories>\n            <img src={Plane} alt=\"Falta de categorias (icone)\" />\n            <h1>Nenhuma categoria adicionada, adicione uma nova!</h1>\n          </WithoutCategories>\n        : <></>\n      }\n\n      <NewCategoryModal state={{ newCategoryModalIsOpen, setNewCategoryModalIsOpen }} />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}