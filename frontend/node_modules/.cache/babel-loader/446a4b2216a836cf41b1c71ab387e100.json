{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/src/components/Tasks/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Emoji } from \"emoji-mart\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport { useCategories } from \"../../hooks/useCategories\";\nimport { Header, Container, CreateNewTask, TaskContainer, Section, WithOutTasks, Details, Dropdown } from \"./styles\";\nimport ImgBack from \"../../assets/back.svg\";\nimport ImgWithoutTask from \"../../assets/task.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Tasks() {\n  _s();\n\n  const [category, setCategory] = useState({\n    bgColor: \"#0f3f86\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"white\"\n  });\n  const [allTasks, setAllTasks] = useState({\n    finished: [],\n    incomplete: []\n  });\n  const [newTask, setNewTask] = useState({\n    taskID: \"\",\n    content: \"\",\n    finish: false,\n    categoryID: \"\"\n  });\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    deleteLocalCategory\n  } = useCategories();\n  const params = useParams();\n  const Navigate = useNavigate();\n\n  function getLocalCategoryInfo(categoryID) {\n    // FOi\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"[]\");\n\n    for (let c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return setCategory(data[c]);\n      }\n    }\n  }\n\n  function refreshLocalTasksState() {\n    // if localstorage change\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks = {\n      finished: [],\n      incomplete: []\n    };\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        if (localData[c].finish) {\n          filterTasks.finished.push(localData[c]);\n        } else {\n          filterTasks.incomplete.push(localData[c]);\n        }\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    localData.push({\n      taskID: uuid(),\n      content: newTask.content,\n      categoryID: params.categoryID || \"\",\n      finish: false\n    });\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n    setNewTask({\n      taskID: \"\",\n      content: \"\",\n      finish: false,\n      categoryID: \"\"\n    });\n  }\n\n  function handleDoneLocalTask(taskID) {\n    let localData = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].taskID === taskID) {\n        if (isEditing) {\n          localData.splice(1, c);\n        } else {\n          localData[c].finish = localData[c].finish ? false : true;\n        }\n      }\n    }\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n  }\n\n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n    }\n  }\n\n  function handleDeleteCategory() {\n    deleteLocalCategory(category.categoryID);\n    Navigate(\"/categories\");\n  }\n\n  useEffect(() => {\n    getLocalCategoryInfo(params.categoryID || \"\");\n    refreshLocalTasksState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      bgColor: category.bgColor,\n      textColor: category.textColor,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/categories\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ImgBack,\n              alt: \"Voltar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Voltar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          isOpen: dropdownIsOpen,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handleDeleteCategory,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 16\n              }, this), \" Deletar Categoria\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), \" Excluir uma tarefa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setDropdownIsOpen(dropdownIsOpen === false),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-gear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Emoji, {\n            emoji: \"heavy_plus_sign\",\n            set: \"facebook\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: category.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(CreateNewTask, {\n        isOk: newTask.content.length !== 0,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleNewTask,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Adicionar nova tarefa\",\n            value: newTask.content,\n            onChange: e => setNewTask({ ...newTask,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), allTasks.finished.length === 0 && allTasks.incomplete.length === 0 ? /*#__PURE__*/_jsxDEV(WithOutTasks, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImgWithoutTask,\n          alt: \"Nenhuma task cadastrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Nenhuma task cadastrada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), allTasks.incomplete.map(task => /*#__PURE__*/_jsxDEV(TaskContainer, {\n        onClick: () => handleDoneLocalTask(task.taskID),\n        finish: task.finish,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: task.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, task.taskID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)), allTasks.finished.length > 0 ? /*#__PURE__*/_jsxDEV(Details, {\n        open: true,\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: [\"Tarefas Conclu\\xEDdas (\", allTasks.finished.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), allTasks.finished.map(task => /*#__PURE__*/_jsxDEV(TaskContainer, {\n          onClick: () => handleDoneLocalTask(task.taskID),\n          finish: task.finish,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-circle-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tasks, \"Ze3Jv7XENzWeDQNjVNrtKC3U7Xw=\", false, function () {\n  return [useCategories, useParams, useNavigate];\n});\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/workspace/to-do-list/src/components/Tasks/index.tsx"],"names":["useState","useEffect","Emoji","Link","useParams","useNavigate","v4","uuid","useCategories","Header","Container","CreateNewTask","TaskContainer","Section","WithOutTasks","Details","Dropdown","ImgBack","ImgWithoutTask","Tasks","category","setCategory","bgColor","categoryID","content","emojiID","textColor","allTasks","setAllTasks","finished","incomplete","newTask","setNewTask","taskID","finish","dropdownIsOpen","setDropdownIsOpen","isEditing","setIsEditing","deleteLocalCategory","params","Navigate","getLocalCategoryInfo","data","JSON","parse","localStorage","getItem","c","length","refreshLocalTasksState","localData","filterTasks","push","newLocalTask","setItem","stringify","handleDoneLocalTask","splice","handleNewTask","handleDeleteCategory","e","target","value","map","task"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Emoji } from \"emoji-mart\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport { useCategories } from \"../../hooks/useCategories\";\n\nimport { Header, Container, CreateNewTask, TaskContainer, Section, WithOutTasks, Details, Dropdown } from \"./styles\";\nimport ImgBack from \"../../assets/back.svg\";\nimport ImgWithoutTask from \"../../assets/task.svg\";\n\nexport type Task = {\n  taskID: string;\n  content: string;\n  finish: boolean;\n  categoryID: string;\n}\n\ntype AllTasks = {\n  finished: Task[];\n  incomplete: Task[];\n}\n\nexport function Tasks() {\n  const [category, setCategory] = useState({\n    bgColor: \"#0f3f86\",\n    categoryID: \"loadings\",\n    content: \"loading...\",\n    emojiID: \"warning\",\n    textColor: \"white\",\n  });\n  const [allTasks, setAllTasks] = useState<AllTasks>({\n    finished: [],\n    incomplete: []\n  });\n  const [newTask, setNewTask] = useState<Task>({\n    taskID: \"\",\n    content: \"\",\n    finish: false,\n    categoryID: \"\",\n  });\n\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const { deleteLocalCategory } = useCategories();\n  const params = useParams();\n  const Navigate = useNavigate();\n\n  function getLocalCategoryInfo(categoryID: string) { // FOi\n    let data = JSON.parse(localStorage.getItem(\"@to-do-list/categories\") || \"[]\")\n\n    for (let c = 0; c < data.length; c++) {\n      if (data[c].categoryID === categoryID) {\n        return setCategory(data[c]);\n      }\n    }\n  }\n\n  function refreshLocalTasksState() { // if localstorage change\n    let localData: Task[] = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n    let filterTasks: AllTasks = {\n      finished: [],\n      incomplete: []\n    };\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].categoryID === params.categoryID) {\n        if (localData[c].finish) {\n          filterTasks.finished.push(localData[c]);\n        } else {\n          filterTasks.incomplete.push(localData[c]);\n        }\n      }\n    }\n\n    setAllTasks(filterTasks);\n  }\n\n  function newLocalTask() {\n    let localData: Task[] = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    localData.push({\n      taskID: uuid(),\n      content: newTask.content,\n      categoryID: params.categoryID || \"\",\n      finish: false\n    });\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n\n    refreshLocalTasksState();\n    setNewTask({\n      taskID: \"\",\n      content: \"\",\n      finish: false,\n      categoryID: \"\",\n    });\n  }\n\n  function handleDoneLocalTask(taskID: string) {\n    let localData: Task[] = JSON.parse(localStorage.getItem(\"@to-do-list/tasks\") || \"[]\");\n\n    for (let c = 0; c < localData.length; c++) {\n      if (localData[c].taskID === taskID) {\n        if (isEditing) {\n          localData.splice(1, c);\n        } else {\n          localData[c].finish = localData[c].finish ? false : true;\n        }\n      }\n    }\n\n    localStorage.setItem(\"@to-do-list/tasks\", JSON.stringify(localData));\n    refreshLocalTasksState();\n  }\n\n  function handleNewTask() {\n    if (newTask.content.length > 0) {\n      newLocalTask();\n    }\n  }\n  \n  function handleDeleteCategory() {\n    deleteLocalCategory(category.categoryID)\n\n    Navigate(\"/categories\");\n  }\n\n  useEffect(() => {\n    getLocalCategoryInfo(params.categoryID || \"\");\n    refreshLocalTasksState();\n  }, [])\n\n  return (\n    <Container>\n      <Header bgColor={category.bgColor} textColor={category.textColor}>\n        <div>\n          <Link to={\"/categories\"} >\n            <div>\n              <img src={ImgBack} alt=\"Voltar\" />\n              <h2> Voltar</h2>\n            </div>\n          </Link>\n        </div>\n\n        <div>\n          <Dropdown isOpen={dropdownIsOpen}>\n            <div>\n              <span\n                onClick={handleDeleteCategory}\n              ><i className=\"fa-solid fa-trash\"></i> Deletar Categoria</span>\n\n              <span>\n                <i className=\"fa-solid fa-trash\"></i> Excluir uma tarefa\n              </span>\n            </div>\n\n            <div onClick={() => setDropdownIsOpen(dropdownIsOpen === false)}>\n              <i className=\"fa-solid fa-gear\"></i>\n            </div>\n          </Dropdown>\n\n          <div>\n            <Emoji emoji={\"heavy_plus_sign\"} set='facebook' size={40} />\n\n            <h1>{category.content}</h1>\n          </div>\n        </div>\n      </Header>\n\n      <Section>\n        <CreateNewTask\n          isOk={newTask.content.length !== 0}\n        >\n          <div onClick={handleNewTask}>\n            <i className={\"fa-solid fa-plus\"} ></i>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Adicionar nova tarefa\"\n              value={newTask.content}\n              onChange={e => setNewTask({ ...newTask, content: e.target.value })}\n            />\n          </div>\n        </CreateNewTask>\n\n        {\n          allTasks.finished.length === 0 && allTasks.incomplete.length === 0\n          ? <WithOutTasks>\n              <img src={ImgWithoutTask} alt=\"Nenhuma task cadastrada\" />\n\n              <h1>Nenhuma task cadastrada</h1>\n            </WithOutTasks>\n          : <></>\n        }\n        {\n          allTasks.incomplete.map(task =>\n            <TaskContainer\n              key={task.taskID}\n              onClick={() => handleDoneLocalTask(task.taskID)}\n              finish={task.finish}\n            >\n              <div>\n                <i className=\"fa-solid fa-circle\"></i>\n              </div>\n\n              <div>\n                {task.content}\n              </div>\n            </TaskContainer>\n          )\n        }\n        {\n          allTasks.finished.length > 0\n          ? <Details open>\n              <summary>Tarefas Concluídas ({allTasks.finished.length})</summary>\n              {\n                allTasks.finished.map(task =>\n\n                  <TaskContainer\n                    key={task.taskID}\n                    onClick={() => handleDoneLocalTask(task.taskID)}\n                    finish={task.finish}\n                  >\n                    <div>\n                      <i className=\"fa-solid fa-circle-check\"></i>\n                    </div>\n\n                    <div>\n                      {task.content}\n                    </div>\n                  </TaskContainer>\n                )\n              }\n            </Details>\n          : <></>\n        }\n\n      </Section>\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}