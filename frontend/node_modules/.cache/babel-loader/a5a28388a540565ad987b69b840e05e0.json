{"ast":null,"code":"var _jsxFileName = \"/workspace/to-do-list/frontend/src/components/Register/index.tsx\",\n    _s = $RefreshSig$();\n\nimport ReactModal from \"react-modal\";\nimport { api } from \"../../services/api\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Container, InputContainer, Button } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Register(props) {\n  _s();\n\n  const [register, setRegister] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    async function load() {\n      let response = await api.post(\"/login\", {\n        ola: \"Mundo\"\n      });\n      console.log(\"Response: \", response);\n    }\n\n    toast(\"Olaaaaa\");\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: props.isOpen,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      onRequestClose: () => props.setIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => props.setIsOpen(false),\n        className: \"close-modal-icon\",\n        src: ImgCloseModal,\n        alt: \"Fechar modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.name,\n            onChange: e => setRegister({ ...register,\n              name: e.target.value\n            }),\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Seu nome completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.email,\n            onChange: e => setRegister({ ...register,\n              email: e.target.value\n            }),\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Endere\\xE7o de email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: register.password,\n            onChange: e => setRegister({ ...register,\n              password: e.target.value\n            }),\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Digite uma senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Digite a senha novamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Para confirmar, digite novamente sua senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"jiM263GH+XkgkHtB2UYmGA8zVmI=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/workspace/to-do-list/frontend/src/components/Register/index.tsx"],"names":["ReactModal","api","useEffect","useState","ToastContainer","toast","Container","InputContainer","Button","ImgCloseModal","Register","props","register","setRegister","name","email","password","load","response","post","ola","console","log","isOpen","setIsOpen","e","target","value"],"mappings":"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","sourcesContent":["import ReactModal from \"react-modal\";\nimport { api } from \"../../services/api\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\n\nimport { Container, InputContainer, Button } from \"./styles\";\nimport ImgCloseModal from \"../../assets/close.svg\";\n\ntype RegisterProps = {\n  isOpen: boolean;\n  setIsOpen: (param: boolean) => void;\n}\n\nexport function Register(props: RegisterProps) {\n  const [register, setRegister] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  })\n\n  useEffect(() => {\n    async function load() {\n      let response = await api.post(\"/login\", { ola: \"Mundo\" })\n\n      console.log(\"Response: \", response);\n    }\n\n    toast(\"Olaaaaa\");\n\n    load();\n  }, [])\n\n\n  return (\n    <>\n      <ToastContainer />\n\n      <ReactModal\n        isOpen={props.isOpen}\n        className={\"modal-content\"}\n        overlayClassName={\"modal-overlay\"}\n        onRequestClose={() => props.setIsOpen(false)}\n      >\n        <img\n          onClick={() => props.setIsOpen(false)}\n          className=\"close-modal-icon\"\n          src={ImgCloseModal}\n          alt=\"Fechar modal\"\n        />\n        <Container>\n\n          <InputContainer>\n            <label htmlFor=\"name\">Nome completo</label>\n            <input \n              value={register.name}\n              onChange={(e) => setRegister({ ...register, name: e.target.value })}\n              id=\"name\" \n              type=\"text\" \n              placeholder=\"Seu nome completo\"\n            />\n          </InputContainer>\n\n          <InputContainer>\n            <label>Email</label>\n            <input \n              value={register.email}\n              onChange={(e) => setRegister({ ...register, email: e.target.value })}\n              id=\"email\" \n              type=\"email\" \n              placeholder=\"Endereço de email\" \n            />\n          </InputContainer>\n\n          <InputContainer>\n            <label>Senha</label>\n            <input \n              value={register.password}\n              onChange={(e) => setRegister({ ...register, password: e.target.value })}\n              id=\"password\" \n              type=\"password\" \n              placeholder=\"Digite uma senha\" \n            />\n          </InputContainer>\n\n\n          <InputContainer>\n            <label>Digite a senha novamente</label>\n            <input id=\"password\" type=\"password\" placeholder=\"Para confirmar, digite novamente sua senha\" />\n          </InputContainer>\n\n\n          <Button>Cadastre-se</Button>\n\n        </Container>\n      </ReactModal>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}